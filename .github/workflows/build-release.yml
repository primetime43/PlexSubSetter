name: Build and Release

on:
  release:
    types: [published]

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --name PlexSubSetter --clean plex_subsetter_gui.py
      shell: cmd

    - name: Upload Windows executable to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/PlexSubSetter.exe
        asset_name: PlexSubSetter-${{ github.event.release.tag_name }}-Windows.exe
        asset_content_type: application/octet-stream

    - name: Upload build artifacts (for debugging)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs-windows
        path: |
          build/
          *.spec

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build macOS executable
      run: |
        pyinstaller --onefile --windowed --name PlexSubSetter --clean plex_subsetter_gui.py

    - name: Create macOS DMG (optional - creates .app bundle)
      run: |
        # The executable is already in dist/PlexSubSetter
        # For macOS, we can optionally create a .app bundle
        mkdir -p dist/PlexSubSetter.app/Contents/MacOS
        cp dist/PlexSubSetter dist/PlexSubSetter.app/Contents/MacOS/
        # Create a simple tar.gz for distribution
        cd dist && tar -czf PlexSubSetter-macOS.tar.gz PlexSubSetter
      continue-on-error: true

    - name: Upload macOS executable to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/PlexSubSetter
        asset_name: PlexSubSetter-${{ github.event.release.tag_name }}-macOS
        asset_content_type: application/octet-stream

    - name: Upload macOS tarball (if created)
      uses: actions/upload-release-asset@v1
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/PlexSubSetter-macOS.tar.gz
        asset_name: PlexSubSetter-${{ github.event.release.tag_name }}-macOS.tar.gz
        asset_content_type: application/gzip
      continue-on-error: true

    - name: Upload build artifacts (for debugging)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs-macos
        path: |
          build/
          *.spec

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-tk python3-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build Linux executable
      run: |
        pyinstaller --onefile --windowed --name PlexSubSetter --clean plex_subsetter_gui.py

    - name: Make executable
      run: chmod +x dist/PlexSubSetter

    - name: Create Linux tarball
      run: |
        cd dist && tar -czf PlexSubSetter-Linux.tar.gz PlexSubSetter

    - name: Upload Linux executable to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/PlexSubSetter
        asset_name: PlexSubSetter-${{ github.event.release.tag_name }}-Linux
        asset_content_type: application/octet-stream

    - name: Upload Linux tarball to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/PlexSubSetter-Linux.tar.gz
        asset_name: PlexSubSetter-${{ github.event.release.tag_name }}-Linux.tar.gz
        asset_content_type: application/gzip

    - name: Upload build artifacts (for debugging)
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-logs-linux
        path: |
          build/
          *.spec
